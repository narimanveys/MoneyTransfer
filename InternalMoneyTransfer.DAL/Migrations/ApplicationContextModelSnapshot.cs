// <auto-generated />
using System;
using InternalMoneyTransfer.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternalMoneyTransfer.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternalMoneyTransfer.Core.DataModel.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("Created");

                    b.Property<int?>("CreditorId");

                    b.Property<int?>("DebtorId");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("DebtorId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("InternalMoneyTransfer.Core.DataModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternalMoneyTransfer.Core.DataModel.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AvailableAmount");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersAccounts");
                });

            modelBuilder.Entity("InternalMoneyTransfer.Core.DataModel.Transaction", b =>
                {
                    b.HasOne("InternalMoneyTransfer.Core.DataModel.UserAccount", "Creditor")
                        .WithMany()
                        .HasForeignKey("CreditorId");

                    b.HasOne("InternalMoneyTransfer.Core.DataModel.UserAccount", "Debtor")
                        .WithMany()
                        .HasForeignKey("DebtorId");
                });

            modelBuilder.Entity("InternalMoneyTransfer.Core.DataModel.UserAccount", b =>
                {
                    b.HasOne("InternalMoneyTransfer.Core.DataModel.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("InternalMoneyTransfer.Core.DataModel.UserAccount", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
